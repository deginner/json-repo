{
    "info": {
        "termsOfService": "http://cryptocapital.co/terms/", 
        "description": "An API for cryptocapital.co using Swagger 2.0 and bitjws. Swagger is an API description tool, which allow Crypto Capital clients to be self-programming. Bitjws is an authentication tool using Bitcoin's message signing and JWS. For Python it is recommended to use Deginner's bravado-bitjws client. Javascript client coming soon.", 
        "license": {
            "url": "http://creativecommons.org/licenses/by/4.0/", 
            "name": "Creative Commons 4.0 International"
        }, 
        "title": "Crypto Capital API", 
        "contact": {
            "url": "https://cryptocapital.co", 
            "name": "Crypto Capital"
        }, 
        "version": "3.0.2"
    }, 
    "paths": {
        "/statement": {
            "post": {
                "responses": {
                    "default": {
                        "description": "an error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "Successful response with signed Statement.", 
                        "schema": {
                            "$ref": "#/definitions/Statement"
                        }
                    }
                }, 
                "description": "A statement is a list of transactions.<br/>To get a single transaction, provide a transactionid.", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "A request to get a statement.", 
                        "name": "statement_request", 
                        "schema": {
                            "$ref": "#/definitions/StatementRequest"
                        }
                    }
                ], 
                "summary": "Get a Crypto Capital account statement. ", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "getStatement"
            }
        }, 
        "/setcallback": {
            "post": {
                "responses": {
                    "default": {
                        "description": "an error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "Successfully set callback URL.", 
                        "schema": {
                            "$ref": "#/definitions/Callback"
                        }
                    }
                }, 
                "description": "A callback is a URL where a customer can receive notifications of bank<br/>transfers from/to the customer's account.<br/>Notifications will use POST and will be signed by the server's bitjws key.", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "The URL at which you would like to receive POST callbacks.", 
                        "name": "callback", 
                        "schema": {
                            "$ref": "#/definitions/Callback"
                        }
                    }
                ], 
                "summary": "Set the callback url for a user.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "setCallback"
            }
        }, 
        "/fxrate/{market}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "an error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "fx rate response", 
                        "schema": {
                            "$ref": "#/definitions/ExchangeRate"
                        }
                    }
                }, 
                "description": "The returned rate is only an <br/>estimate of the rate that would apply if an FX transfer were made.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The six letter market representing two currencies. i.e. USDEUR", 
                        "in": "path", 
                        "name": "market"
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "summary": "Get an exchange rate, as a bid and ask.", 
                "operationId": "getRate"
            }
        }, 
        "/transfer": {
            "post": {
                "description": "Request to make a new Crypto Capital transfer to the beneficiary specified.<br/>A positive response means that your transfer has been successfully submitted <br/>to the banking backend. It does not mean the transfer was approved.<br/>To specify a different currency for the beneficiary to receive in,<br/>include a 'transfercurrency'.<br/>WARNING: A spread is applied for foreign exchange transfers.", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "The request to make a transfer.", 
                        "name": "transfer_request", 
                        "schema": {
                            "$ref": "#/definitions/TransferRequest"
                        }
                    }
                ], 
                "produces": [
                    "application/jose"
                ], 
                "summary": "Create a new Crypto Capital transfer.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "makeTransfer", 
                "responses": {
                    "default": {
                        "description": "an error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "Successfully requested a transfer. Not guaranteed to be approved by the backoffice.", 
                        "schema": {
                            "$ref": "#/definitions/TransferResponse"
                        }
                    }
                }
            }
        }, 
        "/account": {
            "post": {
                "responses": {
                    "default": {
                        "description": "an error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "account response", 
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                }, 
                "description": "Currently no other search parameters are supported.<br/>Users can only get their own accounts.", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "The account id to get.", 
                        "name": "account", 
                        "schema": {
                            "$ref": "#/definitions/RequestByID"
                        }
                    }
                ], 
                "summary": "Get a single Crypto Capital account by id.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "getAccountById"
            }
        }
    }, 
    "schemes": [
        "http", 
        "https"
    ], 
    "produces": [
        "application/jose"
    ], 
    "basePath": "/", 
    "securityDefinitions": {
        "alg": {
            "type": "apiKey", 
            "description": "The signing algorithm to use i.e. \"CUSTOM-BITCOIN-SIGN\"", 
            "name": "alg", 
            "in": "query"
        }, 
        "typ": {
            "type": "apiKey", 
            "description": "The message type", 
            "name": "typ", 
            "in": "query"
        }, 
        "kid": {
            "type": "apiKey", 
            "description": "The JWS key", 
            "name": "kid", 
            "in": "query"
        }
    }, 
    "host": "0.0.0.0:8002", 
    "definitions": {
        "TransferResponse": {
            "properties": {
                "errorMessage": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "statusCode": {
                    "type": "integer"
                }
            }, 
            "required": [
                "statusCode", 
                "description", 
                "errorMessage"
            ], 
            "type": "object", 
            "description": "A Crypto Capital account transfer response. Does not indicate success or failure of transfer itself, but whether request for the transfer was successfully made or not. A successCode == 0 and description == \"Success\" means the transfer request was made.", 
            "title": "TransferResponse"
        }, 
        "Account": {
            "title": "Account", 
            "required": [
                "name", 
                "currency"
            ], 
            "type": "object", 
            "description": "A single Crypto Capital account.", 
            "properties": {
                "available": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "accountNumber": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "customerId": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 3
                }, 
                "date": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "balance": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "type": "string", 
                    "description": "primary key", 
                    "maxLength": 255
                }
            }
        }, 
        "errorModel": {
            "required": [
                "error"
            ], 
            "type": "object", 
            "properties": {
                "code": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "error": {
                    "type": "string"
                }
            }
        }, 
        "RequestByID": {
            "title": "RequestByID", 
            "required": [
                "id"
            ], 
            "type": "object", 
            "description": "A request to get a resource by integer id.", 
            "properties": {
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }
            }
        }, 
        "Transfer": {
            "properties": {
                "status": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "beneficiaryName": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "customerName": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "reference": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "beneficiaryId": {
                    "type": "string", 
                    "maxLength": 16
                }, 
                "accountNumber": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 3
                }, 
                "amount": {
                    "type": "number"
                }, 
                "narrative": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "date": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "transactionId": {
                    "type": "string", 
                    "maxLength": 16
                }, 
                "customerId": {
                    "type": "string", 
                    "maxLength": 16
                }
            }, 
            "required": [
                "customerId", 
                "customerName", 
                "accountNumber", 
                "beneficiaryId", 
                "beneficiaryName", 
                "currency", 
                "amount", 
                "status", 
                "narrative", 
                "date", 
                "reference"
            ], 
            "type": "object", 
            "description": "A Crypto Capital account transfer. Your account could be either the beneficiary (recipient) or the customer (sender).", 
            "title": "Transfer"
        }, 
        "TransferRequest": {
            "title": "TransferRequest", 
            "required": [
                "customerId", 
                "accountNumber", 
                "beneficiary", 
                "currency", 
                "amount", 
                "narrative", 
                "reference"
            ], 
            "type": "object", 
            "description": "A request to send a Crypto Capital transfer. Reference is like a nonce; it should be a unique string.", 
            "properties": {
                "transfercurrency": {
                    "type": "string", 
                    "maxLength": 3
                }, 
                "reference": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "accountNumber": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "customerId": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "beneficiary": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 3
                }, 
                "amount": {
                    "type": "number"
                }, 
                "narrative": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }
        }, 
        "Callback": {
            "title": "Callback", 
            "required": [
                "callback_url"
            ], 
            "type": "object", 
            "properties": {
                "callback_url": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }
            }, 
            "description": "API user's callback URLs."
        }, 
        "User": {
            "description": "A User", 
            "required": [
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "maxLength": 37
                }, 
                "salt": {
                    "type": "string", 
                    "maxLength": 12
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }
            }, 
            "title": "User"
        }, 
        "Statement": {
            "properties": {
                "statusCode": {
                    "type": "integer"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "transactions": {
                    "items": {
                        "$ref": "#/definitions/Transfer"
                    }, 
                    "type": "array"
                }
            }, 
            "required": [
                "transactions", 
                "statusCode"
            ], 
            "type": "object", 
            "description": "A Crypto Capital account statement. A list of transactions.", 
            "title": "Statement"
        }, 
        "ExchangeRate": {
            "title": "ExchangeRate", 
            "required": [
                "bid", 
                "ask"
            ], 
            "type": "object", 
            "description": "An exchange rate for a single market pair, as a snapshot in time.", 
            "properties": {
                "ask": {
                    "type": "number"
                }, 
                "bid": {
                    "type": "number"
                }, 
                "market": {
                    "type": "string", 
                    "maxLength": 6
                }, 
                "time": {
                    "type": "string", 
                    "format": "date-time"
                }
            }
        }, 
        "UserKey": {
            "title": "UserKey", 
            "required": [
                "key", 
                "keytype"
            ], 
            "type": "object", 
            "description": "A User's API key", 
            "properties": {
                "deactivated_at": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "keytype": {
                    "enum": [
                        "public", 
                        "tfa"
                    ], 
                    "type": "string", 
                    "maxLength": 6
                }, 
                "permissionbits": {
                    "type": "string"
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "key": {
                    "type": "string", 
                    "maxLength": 36
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "last_nonce": {
                    "type": "integer"
                }, 
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }
            }
        }, 
        "AccountVerify": {
            "title": "AccountVerify", 
            "required": [
                "accountNumber", 
                "currency"
            ], 
            "type": "object", 
            "description": "Verification info for a Crypto Capital account.", 
            "properties": {
                "currency": {
                    "type": "string", 
                    "maxLength": 3
                }, 
                "accountNumber": {
                    "type": "string", 
                    "maxLength": 255
                }
            }
        }, 
        "StatementRequest": {
            "title": "StatementRequest", 
            "required": [
                "customerId", 
                "accountNumber"
            ], 
            "type": "object", 
            "description": "A request to get a Crypto Capital statement.", 
            "properties": {
                "accountNumber": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "customerId": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "limit": {
                    "type": "integer"
                }, 
                "totime": {
                    "type": "integer"
                }, 
                "transactionid": {
                    "type": "string", 
                    "maxLength": 255
                }, 
                "fromtime": {
                    "type": "integer"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }
        }
    }, 
    "security": [
        {
            "kid": []
        }, 
        {
            "typ": []
        }, 
        {
            "alg": []
        }
    ], 
    "swagger": "2.0", 
    "consumes": [
        "application/jose"
    ]
}
